@import "syntax-variables";



//=== Atom editor style ================================================================================================
atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line,
      &.bracket-matcher,
       {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
        font-weight: bold;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @syntax-text-color;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}



//=== Generic code style ===============================================================================================
.syntax--comment,
.syntax--comment.syntax--punctuation {
  color: @blue;
}

.syntax--string,
.syntax--variable {
  color: @syntax-secondary;
}

.syntax--name.syntax--tag {
  color: @syntax-ternary;
  font-weight: bold;

  &.syntax--custom {
    font-weight: normal;
    font-style: italic;
  }
}



//=== JSON code style ==================================================================================================
.syntax--json {
  &.syntax--dictionary.syntax--key > .syntax--string > .syntax--punctuation,
  &.syntax--dictionary.syntax--key > .syntax--string {
    color: @syntax-text-color;
  }

  &.syntax--dictionary.syntax--value > .syntax--string {
    color: @syntax-secondary;
  }

  // TODO: change the color of the first level attributes keys to @syntax-ternary
}



//=== HTML family code style ===========================================================================================
.syntax--html {
  .syntax--entity.syntax--other.syntax--attribute-name {
    color: @syntax-primary;
  }
}



//=== CSS family code style ============================================================================================
.syntax--css,
.syntax--less,
.syntax--scss {
  &.syntax--definition.syntax--punctuation:not(.syntax--comment) {
    color: @syntax-text-color;
  }

  &.syntax--constant {
    color: @syntax-secondary;
  }
}

&.syntax--other.syntax--attribute-name {
  color: @syntax-text-color;

  &.syntax--id,
  &.syntax--class {
    color: @syntax-primary;
  }
}



//=== Javascript family code style =====================================================================================
.syntax--ts,
.syntax--tsx,
.syntax--js,
.syntax--jsx, {
  .syntax--property {
    color: @syntax-text-color;
  }

  .syntax--keyword {
    color: @syntax-primary;

    &.syntax--control {
      color: @syntax-primary;
    }

    &.syntax--operator {
      color: @syntax-text-color;
    }
  }

  .syntax--storage {
    color: @syntax-primary;
  }

  .syntax--numeric {
    color: @syntax-secondary;
  }

  // Next rule is for a source--js or a .source--jsx
  .syntax--other.syntax--attribute-name {
    color: @syntax-primary;

    &.syntax--id,
    &.syntax--class {
      color: @syntax-primary;
    }
  }

  .syntax--support {
    &.syntax--type {
      color: @syntax-ternary;
      font-style: italic;
    }
  }

  .syntax--meta {
    &.syntax--class {
      color: @syntax-ternary;
    }
  }

  .syntax--none {
    color: @syntax-text-color;
  }
}



//=== Mini editor ======================================================================================================
atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
